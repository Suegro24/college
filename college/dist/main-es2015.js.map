{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/college-list/college-list.component.ts","./src/app/college-list/college-list.component.html","./src/app/college.service.ts","./src/app/college.ts","./src/app/create/create.component.ts","./src/app/create/create.component.html","./src/app/update/update.component.ts","./src/app/update/update.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  title = 'college';\n  isAddSuccess = false;\n\n  constructor(public dialog: MatDialog) {}\n\n}\n","<div class=\"container\">\r\n    <p class=\"text--title__white\">List of colleges</p>\r\n    <app-college-list></app-college-list>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { AppComponent } from './app.component';\nimport { ReadComponent } from './college-list/college-list.component';\nimport { CreateComponent } from './create/create.component';\nimport { UpdateComponent } from './update/update.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst MaterialComponents = [\n  MatCardModule,\n  MatIconModule,\n  MatButtonModule,\n  MatDialogModule\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReadComponent,\n    CreateComponent,\n    UpdateComponent,\n  ],\n  entryComponents: [CreateComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialComponents\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CollegeService } from '../college.service';\nimport { UpdateComponent } from '../update/update.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateComponent } from '../create/create.component';\n\n@Component({\n  selector: 'app-college-list',\n  templateUrl: './college-list.component.html',\n  styleUrls: ['./college-list.component.scss']\n})\nexport class ReadComponent implements OnInit {\n\n  colleges = [];\n\n  constructor(public dialog: MatDialog, private collegeService: CollegeService) { }\n\n  ngOnInit(): void {\n    this.getColleges();\n  }\n\n  addDialog() {\n    const dialogRef = this.dialog.open(CreateComponent);\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getColleges();\n      }\n    });\n    }\n\n  editDialog(id: number) {\n    const dialogRef = this.dialog.open(UpdateComponent, {data: ( {id} )});\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.getColleges();\n      }\n    });\n  }\n\n  deleteCollege(id: number) {\n    this.collegeService.deleteCollege(id).subscribe(() => {\n      this.colleges = this.colleges.filter(college => college.id !== id);\n    });\n  }\n\n  getColleges() {\n    this.collegeService.getColleges().subscribe(data => this.colleges = data);\n  }\n\n}\n","<mat-card class=\"college-card\" *ngFor=\"let college of colleges\">\n    <mat-card-header>\n        <div mat-card-avatar><mat-icon>school</mat-icon></div>\n        <mat-card-title>{{college.name}}</mat-card-title>\n        <mat-card-subtitle>{{college.type}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content class=\"card-content\">\n        <div class=\"card-content--item\">\n            <mat-icon>location_on</mat-icon>\n            <p>{{college.country}}, {{college.city}}</p>\n        </div>\n        <div class=\"card-content--item\">\n            <mat-icon>person</mat-icon>\n            <p>{{college.rector}}</p>\n        </div>\n        <div class=\"card-content--item\">\n            <mat-icon>people</mat-icon>\n            <p>{{college.numberOfStudents}}</p>\n        </div>\n        <div class=\"card-content--item\">\n            <mat-icon>schedule</mat-icon>\n            <p>{{college.foundationYear}}</p>\n        </div>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n        <button mat-raised-button (click)=\"editDialog(college.id)\"><mat-icon>edit</mat-icon></button>\n        <button mat-raised-button color=\"warn\" (click)=\"deleteCollege(college.id)\"><mat-icon>remove</mat-icon></button>\n    </mat-card-actions>\n</mat-card>\n<button mat-raised-button class=\"button__green button--add\" (click)=\"addDialog()\"><mat-icon>add</mat-icon></button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { College } from './college';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CollegeService {\n\n  url = 'http://localhost:3001/api/college';\n\n  typesOfCollege = [\n    'University',\n    'Polytechnic',\n    'Naval academy',\n    'Music academy',\n    'Physical education academy',\n    'Academy of fine art',\n    'Economic university',\n    'Medical college',\n    'Agricultural college',\n    'Pedagogical college',\n    'Military college',\n    'Theological college',\n    'State theater school',\n    'State higher vocational school'\n  ];\n\n  constructor(private http: HttpClient) { }\n\n  getCollege(id: number) {\n    return this.http.get<College>(this.url + `/${id}`);\n  }\n\n  getColleges(): Observable<College[]> {\n    return this.http.get<College[]>(this.url);\n  }\n\n  addCollege(college: College) {\n    return this.http.post<College>(this.url, college);\n  }\n\n  deleteCollege(id: number) {\n    return this.http.delete<College>(this.url + `/delete/${id}`);\n  }\n\n  editCollege(college: College) {\n    return this.http.put<College>(this.url + `/put/${college.id}`, college);\n  }\n\n  getTypesOfColleges() {\n    return this.typesOfCollege;\n  }\n}\n","export class College {\r\n\r\n    constructor(\r\n        public id: number,\r\n        public name: string,\r\n        public country: string,\r\n        public city: string,\r\n        public rector: string,\r\n        public type: string,\r\n        public numberOfStudents: number,\r\n        public foundationYear: number,\r\n        ) { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { College } from '../college';\nimport { CollegeService } from '../college.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n\n  constructor(private collegeService: CollegeService) { }\n\n  typesOfCollege = [];\n\n  collegeModel = new College(null, '', '', '', '', '', null, null);\n\n  addCollege() {\n    this.collegeService.addCollege(this.collegeModel).subscribe();\n  }\n\n  ngOnInit(): void {\n    this.typesOfCollege = this.collegeService.getTypesOfColleges();\n  }\n\n}\n","<h2 mat-dialog-title align=\"center\">Dodawanie uczelni</h2>\n<mat-dialog-content>\n    <form class=\"form\" #addCollegeForm=\"ngForm\" (ngSubmit)=\"addCollege()\">\n\n        <div class=\"form-group\">\n            <input [class.input--warn]=\"name.invalid && name.touched\" type=\"text\" placeholder=\"Name\" name=\"name\" \n            [(ngModel)]=\"collegeModel.name\" #name=\"ngModel\" pattern=\".{1,64}\" required>\n            <div *ngIf=\"name.errors && (name.invalid || name.touched)\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Name is required</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Name can`t be longer than 64 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"text\" [class.input--warn]=\"country.invalid && country.touched\" placeholder=\"Country\" name=\"country\" [(ngModel)]=\"collegeModel.country\" #country=\"ngModel\" pattern=\".{3,10}\" required>\n            <div *ngIf=\"country.errors && country.touched\">\n                <p class=\"text--warn\" *ngIf=\"country.errors.required\">Country is required</p>\n                <p class=\"text--warn\" *ngIf=\"country.errors.pattern\">Country`s name have to be between 3 and 10 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"text\" [class.input--warn]=\"city.invalid && city.touched\" placeholder=\"City\" name=\"city\" [(ngModel)]=\"collegeModel.city\" #city=\"ngModel\" pattern=\".{1,20}\" required>\n            <div *ngIf=\"city.errors && city.touched\">\n                <p class=\"text--warn\" *ngIf=\"city.errors.required\">City is required</p>\n                <p class=\"text--warn\" *ngIf=\"city.errors.pattern\">City`s name have to be between 1 and 20 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"text\" [class.input--warn]=\"rector.invalid && rector.touched\" placeholder=\"Rector\" name=\"rector\" [(ngModel)]=\"collegeModel.rector\" #rector=\"ngModel\" pattern=\".{1,40}\" required>\n            <div *ngIf=\"rector.errors && rector.touched\">\n                <p class=\"text--warn\" *ngIf=\"rector.errors.required\">Rector is required</p>\n                <p class=\"text--warn\" *ngIf=\"rector.errors.pattern\">Rector`s name have to be between 1 and 40 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <select class=\"select\" name=\"type\" [(ngModel)]=\"collegeModel.type\" required>\n                <option disabled selected value=\"\">Select type of college</option>\n                <option *ngFor=\"let type of typesOfCollege\">{{ type }}</option>\n            </select>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"number\" [class.input--warn]=\"number.invalid && number.touched\" placeholder=\"Number of students\" name=\"numberOfStudents\" #number=\"ngModel\" pattern=\".{1,6}\" required [(ngModel)]=\"collegeModel.numberOfStudents\">\n            <div *ngIf=\"number.errors && number.touched\">\n                <p class=\"text--warn\" *ngIf=\"number.errors.required\">Number is required</p>\n                <p class=\"text--warn\" *ngIf=\"number.errors.pattern\">Number have to be between 1 and 999999</p>\n            </div>\n        </div>\n        \n        <div class=\"form-group\">\n            <input type=\"number\" [class.input--warn]=\"year.invalid && year.touched\" placeholder=\"Foundation year\" name=\"foundationYear\" [(ngModel)]=\"collegeModel.foundationYear\" #year=\"ngModel\" pattern=\".{3,4}\" required>\n            <div *ngIf=\"year.errors && year.touched\">\n                <p class=\"text--warn\" *ngIf=\"year.errors.required\">Foundation year is required</p>\n                <p class=\"text--warn\" *ngIf=\"year.errors.pattern\">Year have to be between 100 and 9999</p>\n            </div>\n        </div>\n\n        <mat-dialog-actions align=\"end\">\n            <button [disabled]=\"addCollegeForm.form.invalid\" class=\"button__green\" type=\"submit\" mat-raised-button [mat-dialog-close]=\"true\">Add</button>\n            <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n        </mat-dialog-actions>\n        \n    </form>\n</mat-dialog-content>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { College } from '../college';\nimport { CollegeService } from '../college.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor(private collegeService: CollegeService, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  collegeModel = new College(null, '', '', '', '', '', null, null);\n  typesOfColleges = [];\n\n  editCollege() {\n    this.collegeService.editCollege(this.collegeModel).subscribe();\n  }\n\n  ngOnInit(): void {\n    this.collegeService.getCollege(this.data.id).subscribe(data => this.collegeModel = data);\n    this.typesOfColleges = this.collegeService.getTypesOfColleges();\n  }\n\n}\n","<h2 mat-dialog-title align=\"center\">Edytowanie uczelni z id = {{data.id}}</h2>\n<mat-dialog-content>\n    <form class=\"form\" #editCollegeForm=\"ngForm\" (ngSubmit)=\"editCollege()\">\n\n        <div class=\"form-group\">\n            <input [class.input--warn]=\"name.invalid && name.touched\" type=\"text\" placeholder=\"Name\" name=\"name\" \n            [(ngModel)]=\"collegeModel.name\" #name=\"ngModel\" pattern=\".{1,64}\" required>\n            <div *ngIf=\"name.errors && (name.invalid || name.touched)\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Name is required</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Name can`t be longer than 64 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"text\" [class.input--warn]=\"country.invalid && country.touched\" placeholder=\"Country\" name=\"country\" [(ngModel)]=\"collegeModel.country\" #country=\"ngModel\" pattern=\".{3,10}\" required>\n            <div *ngIf=\"country.errors && country.touched\">\n                <p class=\"text--warn\" *ngIf=\"country.errors.required\">Country is required</p>\n                <p class=\"text--warn\" *ngIf=\"country.errors.pattern\">Country`s name have to be between 3 and 10 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"text\" [class.input--warn]=\"city.invalid && city.touched\" placeholder=\"City\" name=\"city\" [(ngModel)]=\"collegeModel.city\" #city=\"ngModel\" pattern=\".{1,20}\" required>\n            <div *ngIf=\"city.errors && city.touched\">\n                <p class=\"text--warn\" *ngIf=\"city.errors.required\">City is required</p>\n                <p class=\"text--warn\" *ngIf=\"city.errors.pattern\">City`s name have to be between 1 and 20 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"text\" [class.input--warn]=\"rector.invalid && rector.touched\" placeholder=\"Rector\" name=\"rector\" [(ngModel)]=\"collegeModel.rector\" #rector=\"ngModel\" pattern=\".{1,50}\" required>\n            <div *ngIf=\"rector.errors && rector.touched\">\n                <p class=\"text--warn\" *ngIf=\"rector.errors.required\">Rector is required</p>\n                <p class=\"text--warn\" *ngIf=\"rector.errors.pattern\">Rector`s name have to be between 1 and 50 characters</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <select class=\"select\" name=\"type\" [(ngModel)]=\"collegeModel.type\">\n                <option disabled selected value=\"\">Select type of college</option>\n                <option *ngFor=\"let type of typesOfColleges\">{{ type }}</option>\n            </select>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"number\" [class.input--warn]=\"number.invalid && number.touched\" placeholder=\"Number of students\" name=\"numberOfStudents\" #number=\"ngModel\" pattern=\".{1,6}\" required [(ngModel)]=\"collegeModel.numberOfStudents\">\n            <div *ngIf=\"number.errors && number.touched\">\n                <p class=\"text--warn\" *ngIf=\"number.errors.required\">Number is required</p>\n                <p class=\"text--warn\" *ngIf=\"number.errors.pattern\">Number have to be between 1 and 999999</p>\n            </div>\n        </div>\n        \n        <div class=\"form-group\">\n            <input type=\"number\" [class.input--warn]=\"year.invalid && year.touched\" placeholder=\"Foundation year\" name=\"foundationYear\" [(ngModel)]=\"collegeModel.foundationYear\" #year=\"ngModel\" pattern=\".{3,4}\" required>\n            <div *ngIf=\"year.errors && year.touched\">\n                <p class=\"text--warn\" *ngIf=\"year.errors.required\">Foundation year is required</p>\n                <p class=\"text--warn\" *ngIf=\"year.errors.pattern\">Year have to be between 100 and 9999</p>\n            </div>\n        </div>\n\n        <mat-dialog-actions align=\"end\">\n            <button [disabled]=\"editCollegeForm.form.invalid\" class=\"button__green\" type=\"submit\" mat-raised-button [mat-dialog-close]=\"true\">Edit</button>\n            <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"false\">Cancel</button>\n        </mat-dialog-actions>\n        \n    </form>\n</mat-dialog-content>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}